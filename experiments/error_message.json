{
  "./ISSTA24-Solidity-Study/benchmark/0.4.14/2104.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/CompilerContext.cpp(200): Throw in function const dev::solidity::ModifierDefinition& dev::solidity::CompilerContext::functionModifier(const string&) const\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: Function modifier mod not found.\n[dev::tag_comment*] = Function modifier mod not found.",
  "./ISSTA24-Solidity-Study/benchmark/0.4.14/2655.sol": "Error: Member # not unique after argument-dependent lookup in contract #",
  "./ISSTA24-Solidity-Study/benchmark/0.4.17/2915.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/ast/Types.cpp(978): Throw in function virtual dev::u256 dev::solidity::RationalNumberType::literalValue(const dev::solidity::Literal*) const\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: Integer constant too large.\n[dev::tag_comment*] = Integer constant too large.",
  "./ISSTA24-Solidity-Study/benchmark/0.4.19/3293.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ABIFunctions.cpp(1188): Throw in function std::__cxx11::string dev::solidity::ABIFunctions::abiDecodingFunctionCalldataArray(const dev::solidity::ArrayType&)\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: \n[dev::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.4.20/3414.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/CompilerUtils.cpp(726): Throw in function void dev::solidity::CompilerUtils::convertType(const dev::solidity::Type&, const dev::solidity::Type&, bool, bool, bool)\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: \n[dev::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.4.21/2739.sol": "Error: Member # not found or not visible after argument-dependent lookup in type(library #)",
  "./ISSTA24-Solidity-Study/benchmark/0.4.21/2764.sol": "Error: This type is only supported in the new experimental ABI encoder. Use \"pragma experimental ABIEncoderV2;\" to enable the feature.",
  "./ISSTA24-Solidity-Study/benchmark/0.4.21/2977.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ExpressionCompiler.cpp(1151): Throw in function virtual bool dev::solidity::ExpressionCompiler::visit(const dev::solidity::MemberAccess&)\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: Unknown magic member.\n[dev::tag_comment*] = Unknown magic member.",
  "./ISSTA24-Solidity-Study/benchmark/0.4.21/3291.sol": "Error: Expected pragma, import directive or contract/interface/library definition.",
  "./ISSTA24-Solidity-Study/benchmark/0.4.21/3796.sol": "Error: Operator == not compatible with types int_const 1 and int8",
  "./ISSTA24-Solidity-Study/benchmark/0.4.23/4051.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ContractCompiler.cpp(53): Throw in function void {anonymous}::StackHeightChecker::check()\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: I sense a disturbance in the stack: 2 vs 1\n[dev::tag_comment*] = I sense a disturbance in the stack: 2 vs 1",
  "./ISSTA24-Solidity-Study/benchmark/0.4.24/4535.sol": "Error: Explicit type conversion not allowed from \"literal_string \"abcdefg\"\" to \"bytes storage pointer\".",
  "./ISSTA24-Solidity-Study/benchmark/0.4.24/4565.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTChecker.cpp(432): Throw in function void dev::solidity::SMTChecker::arithmeticOperation(const dev::solidity::BinaryOperation&)\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: \n[dev::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.4.24/4706.sol": "--CODEGEN--:9:35: Error: Expected '(' but got '-'",
  "./ISSTA24-Solidity-Study/benchmark/0.5.0/4832.sol": "Error: Function overload clash during conversion to external types for arguments.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.0/5055.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ExpressionCompiler.cpp(1163): Throw in function virtual bool dev::solidity::ExpressionCompiler::visit(const dev::solidity::MemberAccess&)\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: Function not found in member access\n[dev::tag_comment*] = Function not found in member access",
  "./ISSTA24-Solidity-Study/benchmark/0.5.0/5459.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/analysis/TypeChecker.cpp(2703): Throw in function const dev::solidity::Declaration& dev::solidity::TypeChecker::dereference(const dev::solidity::Identifier&) const\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: Declaration not stored.\n[dev::tag_comment*] = Declaration not stored.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.0/5501.sol": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.0;\"\ninterface ISignatureValidator {\n^ (Relevant source part starts here and spans across multiple lines).",
  "./ISSTA24-Solidity-Study/benchmark/0.5.0/5518.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/CompilerUtils.cpp(184): Throw in function void dev::solidity::CompilerUtils::storeInMemoryDynamic(const dev::solidity::Type&, bool)\nDynamic exception type: boost::exception_detail::clone_impl<dev::solidity::InternalCompilerError>\nstd::exception::what: Memory store of type mapping(int256 => int256) not allowed.\n[dev::tag_comment*] = Memory store of type mapping(int256 => int256) not allowed.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.1/5551.sol": "Error: Type rational_const # / # is not implicitly convertible to expected type ufixed8x2. Try converting to type ufixed8x1 or use an explicit conversion.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.10/7155.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ContractCompiler.cpp(62): Throw in function void {anonymous}::StackHeightChecker::check()\nDynamic exception type: boost::wrapexcept<langutil::InternalCompilerError>\nstd::exception::what: I sense a disturbance in the stack: 2 vs 1\n[dev::tag_comment*] = I sense a disturbance in the stack: 2 vs 1",
  "./ISSTA24-Solidity-Study/benchmark/0.5.10/7163.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTChecker.cpp(1703): Throw in function void dev::solidity::SMTChecker::mergeVariables(const std::set<const dev::solidity::VariableDeclaration*>&, const dev::solidity::smt::Expression&, const VariableIndices&, const VariableIndices&)\nDynamic exception type: boost::wrapexcept<langutil::InternalCompilerError>\nstd::exception::what: \n[dev::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.5.10/7164.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTChecker.cpp(1703): Throw in function void dev::solidity::SMTChecker::mergeVariables(const std::set<const dev::solidity::VariableDeclaration*>&, const dev::solidity::smt::Expression&, const VariableIndices&, const VariableIndices&)\nDynamic exception type: boost::wrapexcept<langutil::InternalCompilerError>\nstd::exception::what: \n[dev::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.5.11/7305.sol": "segfault",
  "./ISSTA24-Solidity-Study/benchmark/0.5.11/7378.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/LValue.cpp(401): Throw in function virtual void dev::solidity::StorageItem::setToZero(const langutil::SourceLocation&, bool) const\nDynamic exception type: boost::wrapexcept<langutil::InternalCompilerError>\nstd::exception::what: Clearing of unsupported type requested: mapping(uint256 => uint256)\n[dev::tag_comment*] = Clearing of unsupported type requested: mapping(uint256 => uint256)",
  "./ISSTA24-Solidity-Study/benchmark/0.5.11/7448.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/ast/Types.cpp(2053): Throw in function virtual bool dev::solidity::StructType::isDynamicallyEncoded() const\nDynamic exception type: boost::wrapexcept<langutil::InternalCompilerError>\nstd::exception::what: \n[dev::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.5.12/7549.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/ast/Types.cpp(1852): Throw in function virtual dev::u256 dev::solidity::ArrayType::memoryDataSize() const\nDynamic exception type: boost::wrapexcept<langutil::InternalCompilerError>\nstd::exception::what: Array size does not fit u256.\n[dev::tag_comment*] = Array size does not fit u256.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.2/5730.sol": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.2;\"\ncontract testReturnValues {\n^ (Relevant source part starts here and spans across multiple lines).\n Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n ... blic returns (byte _b, bytes2 _b2, bytes3 _b3, bytes memory _blit, bytes5 _b5, b ...\n                                        ^--------^\n Warning: Function state mutability can be restricted to view\n    function retunValues1 () public returns (bool _b, uint _u, int _i, address _a)  {\n    ^ (Relevant source part starts here and spans across multiple lines).\nUnknown exception during compilation.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.7/6509.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ExpressionCompiler.cpp(1405): Throw in function virtual bool dev::solidity::ExpressionCompiler::visit(const dev::solidity::MemberAccess&)\nDynamic exception type: boost::exception_detail::clone_impl<langutil::InternalCompilerError>\nstd::exception::what: Unknown magic member.\n[dev::tag_comment*] = Unknown magic member.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.8/6574.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTChecker.cpp(1118): Throw in function dev::solidity::smt::Expression dev::solidity::SMTChecker::arithmeticOperation(langutil::Token, const dev::solidity::smt::Expression&, const dev::solidity::smt::Expression&, const dev::solidity::Type* const&, const langutil::SourceLocation&)\nDynamic exception type: boost::exception_detail::clone_impl<langutil::InternalCompilerError>\nstd::exception::what: \n[dev::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.5.8/6575.sol": "Unknown exception during compilation.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.8/6754.sol": "Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.5.8;\"\npragma experimental ABIEncoderV2;\n^ (Relevant source part starts here and spans across multiple lines).",
  "./ISSTA24-Solidity-Study/benchmark/0.5.8/6783.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/ast/Types.cpp(2239): Throw in function dev::u256 dev::solidity::StructType::memoryOffsetOfMember(const string&) const\nDynamic exception type: boost::exception_detail::clone_impl<langutil::InternalCompilerError>\nstd::exception::what: Member not found in struct.\n[dev::tag_comment*] = Member not found in struct.",
  "./ISSTA24-Solidity-Study/benchmark/0.5.9/6864.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTChecker.cpp(437): Throw in function virtual void dev::solidity::SMTChecker::endVisit(const dev::solidity::TupleExpression&)\nDynamic exception type: boost::exception_detail::clone_impl<langutil::InternalCompilerError>\nstd::exception::what: \n[dev::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.5.9/6901.sol": "Error: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.",
  "./ISSTA24-Solidity-Study/benchmark/0.6.11/9296.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1712): Throw in function void solidity::frontend::SMTEncoder::mergeVariables(const std::set<const solidity::frontend::VariableDeclaration*>&, const solidity::smtutil::Expression&, const VariableIndices&, const VariableIndices&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.11/9425.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1709): Throw in function void solidity::frontend::SMTEncoder::mergeVariables(const std::set<const solidity::frontend::VariableDeclaration*>&, const solidity::smtutil::Expression&, const VariableIndices&, const VariableIndices&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.11/9505.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(964): Throw in function virtual void solidity::frontend::SMTEncoder::endVisit(const solidity::frontend::IndexAccess&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.11/9506.sol": "SMT logic error during analysis:\n/solidity/libsmtutil/SolverInterface.h(151): Throw in function static solidity::smtutil::Expression solidity::smtutil::Expression::store(solidity::smtutil::Expression, solidity::smtutil::Expression, solidity::smtutil::Expression)\nDynamic exception type: boost::wrapexcept<solidity::smtutil::SMTLogicError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.11/9519.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1124): Throw in function void solidity::frontend::SMTEncoder::arrayPushPopAssign(const solidity::frontend::Expression&, const solidity::smtutil::Expression&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.2/8210.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/CompilerUtils.cpp(1264): Throw in function void solidity::frontend::CompilerUtils::moveToStackVariable(const solidity::frontend::VariableDeclaration&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: Variable size and position mismatch.\n[solidity::util::tag_comment*] = Variable size and position mismatch.",
  "./ISSTA24-Solidity-Study/benchmark/0.6.3/8368.sol": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.6.3;\"\n --> ./ISSTA24-Solidity-Study/benchmark/0.6.3/8368.sol",
  "./ISSTA24-Solidity-Study/benchmark/0.6.3/8406.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ContractCompiler.cpp(703): Throw in function solidity::frontend::ContractCompiler::visit(const solidity::frontend::InlineAssembly&)::<lambda(const solidity::yul::Identifier&, solidity::yul::IdentifierContext, solidity::yul::AbstractAssembly&)>\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.3/8407.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(411): Throw in function virtual void solidity::frontend::SMTEncoder::endVisit(const solidity::frontend::TupleExpression&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.3/8419.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(457): Throw in function virtual void solidity::frontend::SMTEncoder::endVisit(const solidity::frontend::UnaryOperation&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.5/8817.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(464): Throw in function virtual void solidity::frontend::SMTEncoder::endVisit(const solidity::frontend::UnaryOperation&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.8/8947.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1646): Throw in function std::set<const solidity::frontend::VariableDeclaration*> solidity::frontend::SMTEncoder::touchedVariables(const solidity::frontend::ASTNode&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.8/8971.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1291): Throw in function void solidity::frontend::SMTEncoder::assignment(const solidity::frontend::Expression&, const std::vector<solidity::frontend::smt::Expression>&, const solidity::frontend::Type* const&, const solidity::langutil::SourceLocation&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.8/8991.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/CompilerUtils.cpp(1017): Throw in function void solidity::frontend::CompilerUtils::convertType(const solidity::frontend::Type&, const solidity::frontend::Type&, bool, bool, bool)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.8/9016.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1659): Throw in function const solidity::frontend::VariableDeclaration* solidity::frontend::SMTEncoder::identifierToVariable(const solidity::frontend::Expression&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.8/9028.sol": "Error: No matching declaration found after variable lookup.",
  "./ISSTA24-Solidity-Study/benchmark/0.6.8/9050.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1481): Throw in function void solidity::frontend::SMTEncoder::mergeVariables(const std::set<const solidity::frontend::VariableDeclaration*>&, const solidity::frontend::smt::Expression&, const VariableIndices&, const VariableIndices&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.9/9134.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/CompilerUtils.cpp(275): Throw in function void solidity::frontend::CompilerUtils::abiDecode(const TypePointers&, bool)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.6.9/9229.sol": "Error: Source \"9229.sol\" not found: File outside of allowed directories.",
  "./ISSTA24-Solidity-Study/benchmark/0.6.9/9231.sol": "Error: Name has to refer to a struct, enum or contract.",
  "./ISSTA24-Solidity-Study/benchmark/0.6.9/9233.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1457): Throw in function void solidity::frontend::SMTEncoder::assignment(const solidity::frontend::Expression&, const std::vector<solidity::smtutil::Expression>&, const solidity::frontend::Type* const&, const solidity::langutil::SourceLocation&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.0/9595.sol": "SMT logic error during analysis:\n/solidity/libsmtutil/SolverInterface.h(135): Throw in function static solidity::smtutil::Expression solidity::smtutil::Expression::select(solidity::smtutil::Expression, solidity::smtutil::Expression)\nDynamic exception type: boost::wrapexcept<solidity::smtutil::SMTLogicError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.0/9666.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/ast/Types.cpp(3143): Throw in function virtual std::string solidity::frontend::FunctionType::canonicalName() const\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.1/9741.sol": "SMT logic error during analysis:\n/solidity/libsmtutil/SolverInterface.h(114): Throw in function static solidity::smtutil::Expression solidity::smtutil::Expression::ite(solidity::smtutil::Expression, solidity::smtutil::Expression, solidity::smtutil::Expression)\nDynamic exception type: boost::wrapexcept<solidity::smtutil::SMTLogicError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.1/9752.sol": "Error: No matching declaration found after argument-dependent lookup.",
  "./ISSTA24-Solidity-Study/benchmark/0.7.1/9947.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/interface/Natspec.cpp(187): Throw in function static Json::Value solidity::frontend::Natspec::extractReturnParameterDocs(const std::multimap<std::__cxx11::basic_string<char>, solidity::frontend::DocTag>&, const solidity::frontend::FunctionDefinition&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: No return param name given: z\n[solidity::util::tag_comment*] = No return param name given: z",
  "./ISSTA24-Solidity-Study/benchmark/0.7.1/9957.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/ast/Types.h(226): Throw in function virtual unsigned int solidity::frontend::Type::calldataEncodedSize(bool) const\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.3/10058.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1716): Throw in function void solidity::frontend::SMTEncoder::assignment(const solidity::frontend::Expression&, const solidity::smtutil::Expression&, const solidity::frontend::Type* const&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.3/10105.sol": "Unimplemented feature:\n/solidity/libsolidity/codegen/YulUtilFunctions.cpp(1664): Throw in function solidity::frontend::YulUtilFunctions::updateStorageValueFunction(const solidity::frontend::Type&, const solidity::frontend::Type&, const std::optional<unsigned int>&)::<lambda()>\nDynamic exception type: boost::wrapexcept<solidity::langutil::UnimplementedFeatureError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.3/10106.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1572): Throw in function solidity::smtutil::Expression solidity::frontend::SMTEncoder::bitwiseOperation(solidity::langutil::Token, const solidity::smtutil::Expression&, const solidity::smtutil::Expression&, const solidity::frontend::Type* const&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.3/10186.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/CompilerUtils.cpp(1054): Throw in function void solidity::frontend::CompilerUtils::convertType(const solidity::frontend::Type&, const solidity::frontend::Type&, bool, bool, bool)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.3/10252.sol": "SMT logic error during analysis:\n/solidity/libsmtutil/SolverInterface.h(210): Throw in function static solidity::smtutil::Expression solidity::smtutil::Expression::int2bv(solidity::smtutil::Expression, size_t)\nDynamic exception type: boost::wrapexcept<solidity::smtutil::SMTLogicError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.5/10433.sol": "segfault",
  "./ISSTA24-Solidity-Study/benchmark/0.7.5/10439.sol": "segfault",
  "./ISSTA24-Solidity-Study/benchmark/0.7.5/10523.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/ast/AST.h(1031): Throw in function const solidity::frontend::Block& solidity::frontend::ModifierDefinition::body() const\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.5/10524.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(2539): Throw in function std::vector<solidity::smtutil::Expression> solidity::frontend::SMTEncoder::symbolicArguments(const solidity::frontend::FunctionCall&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.5/10525.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1856): Throw in function void solidity::frontend::SMTEncoder::assignment(const solidity::frontend::Expression&, const solidity::smtutil::Expression&, const solidity::frontend::Type* const&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.7.5/10526.sol": "segfault",
  "./ISSTA24-Solidity-Study/benchmark/0.8.0/10657.sol": "SMT logic error during analysis:\n/solidity/libsmtutil/SolverInterface.h(161): Throw in function static solidity::smtutil::Expression solidity::smtutil::Expression::store(solidity::smtutil::Expression, solidity::smtutil::Expression, solidity::smtutil::Expression)\nDynamic exception type: boost::wrapexcept<solidity::smtutil::SMTLogicError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.0/10666.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/EncodingContext.cpp(108): Throw in function solidity::smtutil::Expression solidity::frontend::smt::EncodingContext::newValue(const solidity::frontend::VariableDeclaration&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.0/10667.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/LValue.cpp(305): Throw in function virtual void solidity::frontend::StorageItem::storeValue(const solidity::frontend::Type&, const solidity::langutil::SourceLocation&, bool) const\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: function item stored but target is not equal to source\n[solidity::util::tag_comment*] = function item stored but target is not equal to source",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/10831.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1543): Throw in function void solidity::frontend::SMTEncoder::indexOrMemberAssignment(const solidity::frontend::Expression&, const solidity::smtutil::Expression&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/10870.sol": "Unknown exception during compilation: std::bad_cast",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/10874.sol": "segfault",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/10881.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/interface/Natspec.cpp(149): Throw in function static Json::Value solidity::frontend::Natspec::devDocumentation(const solidity::frontend::ContractDefinition&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/10914.sol": "Unknown exception during compilation: std::bad_cast",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/10958.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ABIFunctions.cpp(1032): Throw in function std::string solidity::frontend::ABIFunctions::abiEncodingFunctionFunctionType(const solidity::frontend::FunctionType&, const solidity::frontend::Type&, const solidity::frontend::ABIFunctions::EncodingOptions&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/10975.sol": "Error: No visibility specified. Did you intend to add \"public\"?",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/11005.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/SMTEncoder.cpp(1613): Throw in function void solidity::frontend::SMTEncoder::arrayPop(const solidity::frontend::FunctionCall&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/11194.sol": "Error: Only state variables or file-level variables can have a docstring.",
  "./ISSTA24-Solidity-Study/benchmark/0.8.1/11445.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ContractCompiler.cpp(1391): Throw in function void solidity::frontend::ContractCompiler::appendModifierOrFunctionCode()\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.10/12379.sol": "Error: Construction control flow ends without initializing all immutable state variables.",
  "./ISSTA24-Solidity-Study/benchmark/0.8.12/12718.sol": "Error: Cannot implicitly convert component at position 0 from \"string\" to \"string\".",
  "./ISSTA24-Solidity-Study/benchmark/0.8.14/13266.sol": "segfault",
  "./ISSTA24-Solidity-Study/benchmark/0.8.14/13432.sol": "Internal compiler error:\n/solidity/libsolidity/formal/SMTEncoder.cpp(498): Throw in function virtual void solidity::frontend::SMTEncoder::endVisit(const solidity::frontend::UnaryOperation&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: Solidity assertion failed\n[solidity::util::tag_comment*] = Solidity assertion failed",
  "./ISSTA24-Solidity-Study/benchmark/0.8.17/13477.sol": "Uncaught exception:\nDynamic exception type: std::out_of_range\nstd::exception::what: map::at",
  "./ISSTA24-Solidity-Study/benchmark/0.8.17/13732.sol": "Internal compiler error:\n/solidity/liblangutil/UniqueErrorReporter.h(82): Throw in function bool solidity::langutil::UniqueErrorReporter::seen(solidity::langutil::ErrorId, const solidity::langutil::SourceLocation&, const string&) const\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: Solidity assertion failed\n[solidity::util::tag_comment*] = Solidity assertion failed",
  "./ISSTA24-Solidity-Study/benchmark/0.8.17/13735.sol": "SMT logic error:\n/solidity/libsmtutil/SolverInterface.h(217): Throw in function static solidity::smtutil::Expression solidity::smtutil::Expression::select(solidity::smtutil::Expression, solidity::smtutil::Expression)\nDynamic exception type: boost::wrapexcept<solidity::smtutil::SMTLogicError>\nstd::exception::what: SMT assertion failed\n[solidity::util::tag_comment*] = SMT assertion failed",
  "./ISSTA24-Solidity-Study/benchmark/0.8.4/11336.sol": "SMT logic error during analysis:\n/solidity/libsmtutil/SolverInterface.h(263): Throw in function solidity::smtutil::Expression solidity::smtutil::operator==(solidity::smtutil::Expression, solidity::smtutil::Expression)\nDynamic exception type: boost::wrapexcept<solidity::smtutil::SMTLogicError>\nstd::exception::what: Trying to create an 'equal' expression with different sorts\n[solidity::util::tag_comment*] = Trying to create an 'equal' expression with different sorts",
  "./ISSTA24-Solidity-Study/benchmark/0.8.4/11341.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/CHC.cpp(762): Throw in function void solidity::frontend::CHC::externalFunctionCall(const solidity::frontend::FunctionCall&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.4/11356.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/analysis/TypeChecker.cpp(595): Throw in function virtual bool solidity::frontend::TypeChecker::visit(const solidity::frontend::VariableDeclaration&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.4/11497.sol": "segfault",
  "./ISSTA24-Solidity-Study/benchmark/0.8.4/11611.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ContractCompiler.cpp(79): Throw in function void {anonymous}::StackHeightChecker::check()\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: I sense a disturbance in the stack: 4 vs 3\n[solidity::util::tag_comment*] = I sense a disturbance in the stack: 4 vs 3",
  "./ISSTA24-Solidity-Study/benchmark/0.8.4/11677.sol": "Error: Explicit type conversion not allowed from \"string calldata slice\" to \"bytes calldata\".",
  "./ISSTA24-Solidity-Study/benchmark/0.8.7/11855.sol": "Error: Source file requires different compiler version (current compiler is 0.8.7+commit.e28d00a7.Linux.g++) - note that nightly builds are considered to be strictly less than the released version",
  "./ISSTA24-Solidity-Study/benchmark/0.8.7/11929.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/codegen/ContractCompiler.cpp(863): Throw in function solidity::frontend::ContractCompiler::visit(const solidity::frontend::InlineAssembly&)::<lambda(const solidity::yul::Identifier&, solidity::yul::IdentifierContext, solidity::yul::AbstractAssembly&)>\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.7/11955.sol": "Error: Function, variable, struct or modifier declaration expected.",
  "./ISSTA24-Solidity-Study/benchmark/0.8.9/12159.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/ast/Types.cpp(2539): Throw in function const solidity::frontend::Type& solidity::frontend::UserDefinedValueType::underlyingType() const\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] =",
  "./ISSTA24-Solidity-Study/benchmark/0.8.9/12222.sol": "Internal compiler error during compilation:\n/solidity/libsolidity/formal/CHC.cpp(790): Throw in function void solidity::frontend::CHC::externalFunctionCall(const solidity::frontend::FunctionCall&)\nDynamic exception type: boost::wrapexcept<solidity::langutil::InternalCompilerError>\nstd::exception::what: \n[solidity::util::tag_comment*] ="
}